name: Build and Push to ECR

on:
  push:
    paths:
      - 'Dockerfile'
      - 'srs/**'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set the AWS credentials using GitHub Secrets
      - name: Set up AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      # Get the latest tag from ECR and increment it
      - name: Get the Latest ECR Tag and Increment
        id: get_tag
        run: |
          # Get the list of all tags from ECR
          tags=$(aws ecr list-images --repository-name you-can-delete-me --query 'imageIds[*].imageTag' --output text)
          
          # Get the latest tag (assumes tags are in format vX.Y)
          latest_tag=$(echo "$tags" | grep -oP 'v\d+\.\d+' | sort -V | tail -n 1)
          
          # If no tag exists, start with v1.0
          if [ -z "$latest_tag" ]; then
            new_tag="v1.0"
          else
            # Increment the minor version of the latest tag
            major=$(echo $latest_tag | cut -d. -f1)  # Get vX
            minor=$(echo $latest_tag | cut -d. -f2)  # Get Y

            # Increment minor version by 1
            minor=$((minor + 1))

            # Construct new tag (e.g., v1.1)
            new_tag="${major}.$minor"
          fi

          # Set the tag for the image
          echo "New tag for image: $new_tag"
          echo "VERSION_TAG=$new_tag-${GITHUB_SHA::7}" >> $GITHUB_ENV

      # Build Docker Image
      - name: Build Docker Image
        run: |
          echo "Building Docker image with tag ${{ env.VERSION_TAG }}"
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/you-can-delete-me:${{ env.VERSION_TAG }} .

      # Authenticate with AWS ECR
      - name: Authenticate with AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Push Docker Image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/you-can-delete-me:${{ env.VERSION_TAG }}
